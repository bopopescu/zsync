// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	service "github.com/egorka-gh/zbazar/zsync/pkg/service"
	endpoint "github.com/go-kit/kit/endpoint"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	ListVersionEndpoint endpoint.Endpoint
	PullPackEndpoint    endpoint.Endpoint
	PushPackEndpoint    endpoint.Endpoint
	PackDoneEndpoint    endpoint.Endpoint
	AddActivityEndpoint endpoint.Endpoint
	GetLevelEndpoint    endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.ZsyncService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		AddActivityEndpoint: MakeAddActivityEndpoint(s),
		GetLevelEndpoint:    MakeGetLevelEndpoint(s),
		ListVersionEndpoint: MakeListVersionEndpoint(s),
		PackDoneEndpoint:    MakePackDoneEndpoint(s),
		PullPackEndpoint:    MakePullPackEndpoint(s),
		PushPackEndpoint:    MakePushPackEndpoint(s),
	}
	for _, m := range mdw["ListVersion"] {
		eps.ListVersionEndpoint = m(eps.ListVersionEndpoint)
	}
	for _, m := range mdw["PullPack"] {
		eps.PullPackEndpoint = m(eps.PullPackEndpoint)
	}
	for _, m := range mdw["PushPack"] {
		eps.PushPackEndpoint = m(eps.PushPackEndpoint)
	}
	for _, m := range mdw["PackDone"] {
		eps.PackDoneEndpoint = m(eps.PackDoneEndpoint)
	}
	for _, m := range mdw["AddActivity"] {
		eps.AddActivityEndpoint = m(eps.AddActivityEndpoint)
	}
	for _, m := range mdw["GetLevel"] {
		eps.GetLevelEndpoint = m(eps.GetLevelEndpoint)
	}
	return eps
}
